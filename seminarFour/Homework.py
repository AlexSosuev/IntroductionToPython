# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго 
# множества. Затем пользователь вводит сами элементы множеств.

def setofnumber(n,str):
    number_list=[]
    for _ in range(n):
         number_list.append(int(input(str)))
    return number_list

N=(int(input("Введите количество элементов первого набора n: ")))
list_1 = setofnumber(N, '')
M=(int(input("Введите количество элементов второго набора m: ")))
list_2 = setofnumber(M, '')

print(f'Первый набор: {list_1}')
print(f'Второй набор: {list_2}')

print(*sorted(set(list_1).intersection(set(list_2))))

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, 
# причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. 
# Всего на грядке растёт N кустов. Эти кусты обладают разной урожайностью, поэтому ко времени сбора 
# на них выросло различное число ягод — на i-ом кусте выросло ai ягод. В этом фермерском хозяйстве 
# внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и 
# нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед 
# некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним. Напишите программу для 
# нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь 
# перед некоторым кустом заданной во входном файле грядки.

n = int(input('Введите количество кустов n: '))
garden_bed = setofnumber(n, 'Количество ягод на кусте: ') # метод setofnumber взят из предыдущей задачи
max_berries = 0
for i in range(0,n):
    max_berries = max(max_berries, garden_bed[i % n] + garden_bed[(i+1) % n] + garden_bed[(i+2) % n])
print(f'Максимальное количество ягод равно {max_berries}')