# Задача 30: Заполните массив элементами арифметической прогрессии. Её первый элемент, разность и количество
# элементов нужно ввести с клавиатуры. Формула для получения n-го члена прогрессии: an  = a1 + (n-1) * d.
# Каждое число вводится с новой строки.

# a1 = int(input("Введите значение первого элемента прогрессии: "))
# d = int(input("Введите разность: "))
# n = int(input("Введите количество эментов: "))

# for i in range(n):
#     print(a1+i*d, end=' ')
# print()

# Задача 32: Определить индексы элементов массива (списка), значения которых принадлежат заданному диапазону (т.е. не меньше заданного минимума и не
# больше заданного максимума)

# list_1 = [-5, 9, 0, 3, -1, -2, 1, 4, -2, 10, 2, 0, -9, 8, 10, -9, 0, -5, -5, 7]
# min_number = int(input('Введите минимум: '))
# max_number = int(input('Введите максимум: '))
# for i in range(len(list_1)):
#     if min_number <= list_1[i] <= max_number:
#         print(i, end=' ')
# print()

# Задача 43. Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару, которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных строках.

# def task_43(some_list):
#     count = 0
#     for i in range(len(some_list)):
#         for j in range(i+1, len(some_list)):
#             if some_list[j] == some_list[i]:
#                 count += 1
#     print(f'Для списка {some_list}, количество элементов, удовлетворяющих условию, равно - {(count)}')

# task_43([1,2,3,4,5])
# task_43([1,2,3,2,3])
# task_43([1,2,2,2,2])

# Задача 45. Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не превосходящее 105. Программа должна вывести все
# пары дружественных чисел, каждое из которых не превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть выведена только один раз (перестановка чисел новую
# пару не дает).

# def sum_of_divisors(n):
#     return sum(i for i in range(1, n//2+1) if n%i==0)

# N = int(input("Введите натуральное число: "))
# for i in range(N):
#     j = sum_of_divisors(i)
#     if i < j <= N and i == sum_of_divisors(j):
#         print(f'{i} {j}')

# Искусственный интеллект Антон, созданный Гилфойлом, взломал сеть умных холодильников. Теперь он использует их в качестве серверов "Пегого дудочника". Помогите владельцу фирмы отыскать все зараженные холодильники.

# Для каждого холодильника существует строка с данными, состоящая из строчных букв и цифр, и если в ней присутствует слово "anton" (необязательно рядом стоящие буквы, главное наличие последовательности букв), то холодильник заражен и нужно вывести номер холодильника, нумерация начинается с единицы

# Формат входных данных: 
# В первой строке подаётся число n – количество холодильников. В последующих n строках вводятся строки, содержащие латинские строчные буквы и цифры, в каждой строке от 5 до 100 символов.

# Формат выходных данных:
# Программа должна вывести номера зараженных холодильников через пробел. Если таких холодильников нет, ничего выводить не нужно.


# Sample Input 1:
# 6
# 222anton456
# a1n1t1o1n1
# 0000a0000n00t00000o000000n
# gylfole
# richard
# ant0n

# Sample Output 1:
# 1 2 3

# Sample Input 2:
# 9
# osfjwoiergwoignaewpjofwoeijfnwfonewfoignewtowenffnoeiwowjfninoiwfen
# anton
# aoooooooooontooooo
# elelelelelelelelelel
# ntoneeee
# tonee
# 253235235a5323352n25235352t253523523235oo235523523523n
# antoooooooooooooooooooooooooooooooooooooooooooooooooooon
# unton

# Sample Output 2:
# 1 2 7 8

# virus = 'anton'
# sample_output = set()

# for i in range(1, int(input()) + 1):
#     s = input('Введите строку: ')
#     res = ''
#     for j in virus:
#         if j in s:
#             res += j
#             s = s[s.find(j):]        
#     if res == virus:
#         sample_output.add(i)
# print(*sorted(sample_output))


def func(n, lst):
    answer = []
    for i in range(n):
        for j in 'anton':
            if j not in lst[i] or lst[i].count('n') < 2:
                break
        else:
            answer.append(i+1)
    print('Номера зараженных холодильников: ', *answer) 

lst=['222anton456',
    'a1n1t1o1n1',
    '0000a0000n00t00000o000000n',
    'gylfole',
    'richard',
    'ant0n']
func(6, lst)